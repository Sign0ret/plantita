/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/V5llcFf28RA
 */
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"

export function Dashboard() {
  return (
    <div className="flex flex-col min-h-screen w-full items-center justify-center gap-2 p-4 md:gap-0 md:flex-row md:max-h-[calc(100vh_-_theme(spacing.16))] lg:gap-4 xl:max-h-[calc(100vh_-_theme(spacing.12))]">
      <aside className="hidden md:flex flex-col w-[300px] max-h-[calc(100vh_-_theme(spacing.16))] border-r md:w-full md:max-h-full md:border-0 lg:max-w-[400px]">
        <div className="flex items-center gap-4 p-4">
          <Link className="flex items-center gap-2 text-lg font-semibold sm:text-base" href="#">
            <FrameIcon className="w-6 h-6" />
            <span className="sr-only">Acme Inc</span>
          </Link>
        </div>
        <div className="flex-1 flex flex-col items-start gap-4 p-4">
          <nav className="flex-1 flex flex-col items-start gap-4 text-sm">
            <Link className="font-semibold peer-disabled:cursor-not-allowed peer-disabled:opacity-70" href="#">
              Dashboard
            </Link>
            <Link className="rounded-lg" href="#">
              <UploadCloudIcon className="w-4 h-4 peer-children:mr-2" />
              Water Now
            </Link>
            <Link className="rounded-lg" href="#">
              <SettingsIcon className="w-4 h-4 peer-children:mr-2" />
              Settings
            </Link>
          </nav>
        </div>
      </aside>
      <main className="flex flex-col w-full gap-4 md:gap-2 lg:gap-4 xl:gap-8 md:grid-rows-1">
        <div className="flex items-center md:flex-col md:items-start md:gap-2 lg:gap-4 xl:gap-8">
          <h1 className="text-3xl font-bold tracking-tighter md:text-2xl xl:text-4xl">Smart Plant Regulator</h1>
          <Button className="ml-auto md:ml-0" size="sm" variant="outline">
            Connect Device
          </Button>
        </div>
        <div className="grid gap-4 md:grid-cols-2 xl:gap-8">
          <Card className="p-0">
            <CardHeader className="p-6 rounded-none">
              <div className="flex items-center gap-4">
                <DropletIcon className="w-8 h-8" />
                <div className="grid gap-1">
                  <CardTitle>Humidity</CardTitle>
                  <CardDescription>Current humidity level</CardDescription>
                </div>
              </div>
            </CardHeader>
            <CardContent className="p-6 flex items-center justify-center">
              <div className="text-5xl font-bold tracking-tighter peer-disabled:select-none">
                45
                <span className="text-2xl font-normal peer:translate-x-2">%</span>
              </div>
            </CardContent>
          </Card>
          <Card className="p-0">
            <CardHeader className="p-6 rounded-none">
              <div className="flex items-center gap-4">
                <ClockIcon className="w-8 h-8" />
                <div className="grid gap-1">
                  <CardTitle>Next Watering</CardTitle>
                  <CardDescription>Time until the next watering</CardDescription>
                </div>
              </div>
            </CardHeader>
            <CardContent className="p-6 flex items-center justify-center">
              <div className="text-5xl font-bold tracking-tighter peer-disabled:select-none">
                2
                <span className="text-2xl font-normal peer:translate-x-2">h</span>
                30
                <span className="text-2xl font-normal peer:translate-x-2">m</span>
              </div>
            </CardContent>
          </Card>
        </div>
        <Card>
          <CardHeader className="p-4">
            <CardTitle>Watering Log</CardTitle>
            <CardDescription>History of past waterings</CardDescription>
          </CardHeader>
          <CardContent className="p-0">
            <div className="overflow-auto w-full">
              <table className="w-full border-collapse text-sm peer-children:grid-rows-none">
                <thead className="peer-children:contents">
                  <tr className="border-t">
                    <th className="p-4 font-normal text-left peer:transition-colors peer:duration-150 peer:hover:bg-gray-100 dark:peer:hover:bg-gray-800">
                      Time
                    </th>
                    <th className="p-4 font-normal text-left peer:transition-colors peer:duration-150 peer:hover:bg-gray-100 dark:peer:hover:bg-gray-800">
                      Duration
                    </th>
                  </tr>
                </thead>
                <tbody className="peer-children:contents">
                  <tr className="peer:transition-colors peer:duration-150 peer:hover:bg-gray-100 dark:peer:hover:bg-gray-800">
                    <td className="p-4">10:00 AM</td>
                    <td className="p-4">2 minutes</td>
                  </tr>
                  <tr className="peer:transition-colors peer:duration-150 peer:hover:bg-gray-100 dark:peer:hover:bg-gray-800">
                    <td className="p-4">11:30 AM</td>
                    <td className="p-4">3 minutes</td>
                  </tr>
                  <tr className="peer:transition-colors peer:duration-150 peer:hover:bg-gray-100 dark:peer:hover:bg-gray-800">
                    <td className="p-4">2:45 PM</td>
                    <td className="p-4">5 minutes</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      </main>
    </div>
  )
}

interface IconProps extends React.SVGProps<SVGSVGElement> {
  className?: string;
}
function FrameIcon({ className, ...rest }: IconProps) {
  return (
    <svg
      {...rest}
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="22" x2="2" y1="6" y2="6" />
      <line x1="22" x2="2" y1="18" y2="18" />
      <line x1="6" x2="6" y1="2" y2="22" />
      <line x1="18" x2="18" y1="2" y2="22" />
    </svg>
  )
}


function UploadCloudIcon({ className, ...rest }: IconProps) {
  return (
    <svg
      {...rest}
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" />
      <path d="M12 12v9" />
      <path d="m16 16-4-4-4 4" />
    </svg>
  )
}


function SettingsIcon({ className, ...rest }: IconProps) {
  return (
    <svg
      {...rest}
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


function DropletIcon({ className, ...rest }: IconProps) {
  return (
    <svg
      {...rest}
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z" />
    </svg>
  )
}


function ClockIcon({ className, ...rest }: IconProps) {
  return (
    <svg
      {...rest}
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <polyline points="12 6 12 12 16 14" />
    </svg>
  )
}
